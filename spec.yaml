openapi: 3.0.3
info:
  title: API de Gestión de Clientes
  version: 1.0.6
  description: 'API para gestión de usuarios, empresas y grupos'
servers:
  - url: 'http://localhost:8080'
    description: Servidor local
paths:
  /clients/register:
    post:
      tags:
        - Autenticación
      summary: Registrar nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  Exito:
                    type: boolean
                  token:
                    type: string
        '400':
          description: Error en el registro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /clients/login:
    post:
      tags:
        - Autenticación
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                  exitoso:
                    type: boolean
                  token:
                    type: string
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/clients/{email}/company/{uuid}':
    post:
      tags:
        - Administración
      summary: Asignar usuario a compañía
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Usuario asignado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/clients/{email}/rol/{nameRol}':
    post:
      tags:
        - Administración
      summary: Cambiar rol de usuario
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
        - name: nameRol
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rol actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
        '404':
          description: Error en la operación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/clients/{email}/addGroup/{uuidGroup}':
    post:
      tags:
        - Grupos
      summary: Agregar usuario a grupo
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
        - name: uuidGroup
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Usuario agregado al grupo
          content:
            application/json:
              schema:
                type: object
                properties:
                  Success:
                    type: boolean
        '404':
          description: Error en la operación
          content:
            application/json:
              schema:
                type: object
                properties:
                  Success:
                    type: boolean
                  message:
                    type: string
  /clients/getEmployeeGroupsForCompany:
    get:
      tags:
        - Administración
      summary: Obtener grupos de empleados
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: size
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Listado paginado de empleados y sus grupos
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        fullName:
                          type: string
                        Rol:
                          type: string
                        email:
                          type: string
                          format: email
                        Groups:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
components:
  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: usuario@ejemplo.com
        password:
          type: string
          minLength: 3
          example: '123'
        name:
          type: string
          example: Juan
        lastName:
          type: string
          example: Pérez
    ErrorResponse:
      type: object
      properties:
        mensaje:
          type: string
        Exito:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
