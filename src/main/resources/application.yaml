spring:
  application:
    name: APIV2

  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20 # Revisaré el tiempo de conexión : Máximo de conexiones concurrentes
      connection-timeout: 5000 # 5 segundos (ajusta según latencia)
      idle-timeout: 300000 # 5 minutos y muere el hilo y pone solo 5 hilos si hay inactividad
      max-lifetime: 240000 # 4 minutos para refrescar los nuevos hilos
      minimum-idle: 5

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    #show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 30 # Optimiza inserts/updates similar a fetch_size
          fetch_size: 100 # Reduce viajes a la BD con base en las consultas es decir 100 SELECT se envian en 1
        default_batch_fetch_size: 20 # Evita N+1 en relaciones

  config:
    import:
      - "messages.yml"
  mail:
    server: mail.sintergica.ai
    enable-auth: true
    enable-tls: true
    smtp-port: 465
    ssl-port: 465
    from-email: ${EMAIL}
    email-password: ${EMAIL_PASSWORD}
    base-url: http://localhost:5173

logging:
  level:
    org:
      springframework:
        jdbc: DEBUG

michelle:
  url: "https://michelle-hoyto.ondigitalocean.app/event"
  token: ${DATASOURCE_PASSWORD}

server:
  port: 8080
